; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "WardWizAdwareCleaner"
#define MyAppTitle "WardWiz Adware Cleaner"
#define MyAppVersion "1.0.0.8"
#define MyUninstallName "WardWiz version 1.0.0.8"
#define MyAppPublisher "WardWizAdwareCleaner"
#define MyAppURL "http://www.wardwiz.com/"
#define MyAppExeName "WWizAdwareCleaner.EXE"
#define MyWardWizAppName "WWizAdwareCleaner"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AE50CFED-8029-4B4A-864A-4203D73A7C9A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\WWizAdwareCleaner
DefaultGroupName={#MyAppName}
OutputDir=.\Output
OutputBaseFilename=WardWizAdwareCleanerSetup
SetupIconFile=Logo\COMPANYLOGO.ICO
Compression=lzma2/ultra64
SolidCompression=true
UninstallDisplayName={#MyWardWizAppName}
UninstallRestartComputer=false
UninstallDisplayIcon={app}\COMPANYLOGO.ICO
UsePreviousAppDir=no
DisableProgramGroupPage=yes
WizardImageFile=SetupImages\setup_img.bmp
WizardSmallImageFile=SetupImages\logo.bmp
AllowCancelDuringInstall=yes
ShowLanguageDialog =yes
UseSetupLdr =yes
VersionInfoVersion ={#MyAppVersion}
AllowNetworkDrive =no
AllowUNCPath =no
AppendDefaultDirName =yes
DisableDirPage =yes
SetupLogging =yes

[Languages]
;Name: Spanish; MessagesFile: compiler:Languages\Spanish.isl; LicenseFile: Licence\Enligh-license.txt
;Name: French; MessagesFile: compiler:Languages\French.isl; LicenseFile: Licence\Enligh-license.txt
;Name: Chinese; MessagesFile: compiler:Languages\Chinese.isl; LicenseFile: Licence\Enligh-license.txt

[LangOptions]

[Dirs]
Name: {app}\Quarantine; Tasks: ; Languages: 

[Files]
Source: RequiredFiles\SQLITE\32\SQLITE3.DLL; DestDir: {app}; Flags: ignoreversion overwritereadonly
Source: ..\Release\WWizAdwareCleaner.DB; DestDir: {app}; Flags: overwritereadonly ignoreversion
Source: ..\Release\WWizAdwareCleaner.exe; DestDir: {app}; Flags: overwritereadonly ignoreversion

[Run]
Filename: {app}\WWizAdwareCleaner.exe; Parameters: /silent; Flags: nowait

[UninstallDelete]
Name: {app}\WWizAdwareCleaner.exe; Type: files
Type: files; Name: {app}\*.*
Type: filesandordirs; Name: {app}

[InstallDelete]
Type: files; Name: {group}\*.*

[Code]
const
	MySetupMutex = 'AE50CFED-8029-4B4A-864A-4203D73A7C9A';

function IsAppRunning(const FileName: string): Boolean;
var
  FWMIService: Variant;
  FSWbemLocator: Variant;
  FWbemObjectSet: Variant;
begin
  Result := false;
  FSWbemLocator := CreateOleObject('WBEMScripting.SWBEMLocator');
  FWMIService := FSWbemLocator.ConnectServer('', 'root\CIMV2', '', '');
  FWbemObjectSet := FWMIService.ExecQuery(Format('SELECT Name FROM Win32_Process Where Name="%s"',[FileName]));
  Result := (FWbemObjectSet.Count > 0);
  FWbemObjectSet := Unassigned;
  FWMIService := Unassigned;
  FSWbemLocator := Unassigned;
end;

function InitializeSetup: Boolean;
begin
	Result := not IsAppRunning('WWizAdwareCleaner.exe');
	if not Result then
	begin
		MsgBox( ExpandConstant('AdwareCleaner.exe is already running.') , mbConfirmation, MB_OK);
		exit;
	end;
	Result := not CheckForMutexes(MySetupMutex);
	if Result then
	begin
		CreateMutex(MySetupMutex)
	end;
	if not Result then
	begin
		MsgBox( ExpandConstant('Another instance is running.') , mbConfirmation, MB_OK);
	end;
end;

function InitializeUninstall() : Boolean;
var
  ErrorCode: Integer;
begin
	Result := not IsAppRunning('WWizAdwareCleaner.exe');
	if not Result then
	begin
		ShellExec('open','taskkill.exe','/f /im WWizAdwareCleaner.exe','',SW_HIDE,ewNoWait,ErrorCode);
		Sleep(100);
	end;
	MsgBox( ExpandConstant('Successfully removed WardWiz Adware Cleaner and its components.') , mbConfirmation, MB_OK);
	Result :=  true;
end;

procedure InitializeWizard;
begin
end;
