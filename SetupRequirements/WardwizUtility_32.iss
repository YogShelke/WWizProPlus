; Script generated by the Inno Setup Script Wizard.
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "WardWiz"
#define MyTlbName "WardWiz TLB"
#define MyTlbExeName "WRDWIZTLB.EXE"
#define MyAppVersion "1.8.3.0"
#define MyAppPublisher "WardWiz"
#define MyAppURL "http://www.wardwiz.com/"
#define MyAppExeName "WRDWIZAVUI.EXE"
#define MyAppExeName1 "WRDWIZAUTORUNSCN.EXE"
#define MyAppExeName2 "WRDWIZTEMPCLR.EXE"
#define MyAppExeName3 "WRDWIZUSBVAC.EXE"
#define MyWardWizAppName "WardWiz"
#define MyUtility_1 "AUTORUN SCANNER"
#define MyUtility_2 "TEMPORARY FILE CLEANER"
#define MyUtility_3 "USB VACCINATOR"
#define Utility "Utilities"
#define AppVer ReadIni("D:\WardWizDevEPS_4.1\WWBinary.ini", "ProductVersion", "ProductVer", "0.0.0.0")
#define DataVer ReadIni("D:\WardWizDevEPS_4.1\WWBinary.ini", "DatabaseVersion", "DatabaseVer", "0.0.0.0")
#define DataEncVer ReadIni("D:\WardWizDevEPS_4.1\WWBinary.ini", "DataEncVersion", "DataEncVer", "0.0")
#define REDESTRIBUTABLES "vcredist_x86.exe"
#define ResIconReg "WardWiz.PATH.1.10.RES"
#define ResFileName "WRDWIZRESOURCE.DLL,-1156"

#define ExecuteExeRegEntrySecParam  "%1"
#define ExecuteExeRegEntryThirdParam "-DEC "
#define SupportNo "(+91) 20 3952 0795"
#define SupportNumberClam ReadIni("D:\WardWizDevEPS_4.1\WWBinary.ini", "SupportNo", "SupportNumberClam", "(+91) 20 3952 0795")
#define SupportNumberNC ReadIni("D:\WardWizDevEPS_4.1\WWBinary.ini", "SupportNo", "SupportNumberNC", "")

#define PPSECURE64 "WRDWIZREGPROT.SYS"
#define PPXPROC "WRDWIZXPPROC.SYS"
#define FPSCANNER "WRDWIZFILEPROT.SYS"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{078ABE62-583D-43e6-96D6-5D092883DC82}
AppName={#MyAppName}
AppVersion={#AppVer}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputDir=D:\WardWizDevEPS_4.1\Release\Win32\Binaries\
OutputBaseFilename=WRDWIZUTILITY
SetupIconFile=Logo\COMPANYLOGO.ICO
Compression=lzma
SolidCompression=true
;Varada Ikhar, Date:13th May-2015, Issue:000283: In control Panel the version no. should not be mentioned. It should be WardWiz Antivirus.
UninstallDisplayName={#MyWardWizAppName}
UninstallRestartComputer=false
UninstallDisplayIcon={app}\COMPANYLOGO.ICO
UsePreviousAppDir=yes
DisableProgramGroupPage=yes
WizardImageFile=SetupImages\setup_img.bmp
WizardSmallImageFile=SetupImages\logo.bmp
AllowCancelDuringInstall=yes
ShowLanguageDialog =no
;ArchitecturesAllowed =x64
;ArchitecturesInstallIn64BitMode=x64
UseSetupLdr =yes
VersionInfoVersion ={#AppVer}
DisableDirPage =yes
; to keep previous uninstallaion registry key
CreateUninstallRegKey =no
UsePreviousLanguage =yes

[Languages]
Name: english; MessagesFile: compiler:Default.isl; LicenseFile: Licence\Enligh-license.txt
Name: german; MessagesFile: compiler:Languages\German.isl; LicenseFile: Licence\German-license.txt
;Name: Spanish; MessagesFile: compiler:Languages\Spanish.isl; LicenseFile: Licence\Enligh-license.txt
;Name: French; MessagesFile: compiler:Languages\French.isl; LicenseFile: Licence\Enligh-license.txt
;Name: Chinese; MessagesFile: compiler:Languages\Chinese.isl; LicenseFile: Licence\Enligh-license.txt

[CustomMessages]
CMWWInstallRedistriFailed =Installation of C++ Redestributables failed. Exit code:
english.CMWWInstallRedistriFailed=Installation of C++ Redestributables failed. Exit code:
german.CMWWInstallRedistriFailed=Einbau von C ++ Redestributables fehlgeschlagen. Exit-Code:

CMWWAlreadyInstalled1 =WardWiz is already installed at
english.CMWWAlreadyInstalled1 =WardWiz is already installed at
german.CMWWAlreadyInstalled1 =WardWiz wurde bereits installiert auf

CMWWAlreadyInstalled2 =Please uninstall it from previous path to continue setup installation.
english.CMWWAlreadyInstalled2 =Please uninstall it from previous path to continue setup installation.
german.CMWWAlreadyInstalled2 =Bitte deinstallieren Sie es mit dem vorherigen Pfad um mit der Setup-Installation fortzufahren.

CMWWCloseAllWWApp =Please close all running WardWiz application(s) for reinstallation
english.CMWWCloseAllWWApp =Please close all running WardWiz application(s) for reinstallation
german.CMWWCloseAllWWApp =Bitte schließen Sie alle laufenden WardWiz Anwendung(en) um die Neuinstallation durchführen zu können.

CMWWDeleteQuarantineFolder =Do you want to delete the quarantine folder?
english.CMWWDeleteQuarantineFolder =Do you want to delete the quarantine folder?
german.CMWWDeleteQuarantineFolder =Wollen Sie den Quarantäne-Ordner löschen ?

CMWWRemoveSuccess=WardWiz was successfully removed from your computer. //just in case (should be equal to English)
english.CMWWRemoveSuccess=WardWiz was successfully removed from your computer.
german.CMWWRemoveSuccess=WardWiz wurde erfolgreich von Ihrem Computer entfernt.

CMWWRestartReq =To complete the uninstallation of WardWiz, your computer must be restarted. Would you like to restart now? //just in case (should be equal to English)
english.CMWWRestartReq=To complete the uninstallation of WardWiz, your computer must be restarted. Would you like to restart now?
german.CMWWRestartReq=Ihr Computer muss neu gestartet werden, um die Deinstallation vonWardWiz abzuschließen. Möchten Sie jetzt neu starten ?

CMWWUninstallPrevVer =Do you want to uninstall previous version?
english.CMWWUninstallPrevVer =Do you want to uninstall previous version?
german.CMWWUninstallPrevVer =Wollen Sie die vorherige Version deinstallieren ?

CMWWPrevVerInstalled =Previous version of WardWiz is already installed, Do you want to uninstall previous version?
english.CMWWPrevVerInstalled =Previous version of WardWiz is already installed, Do you want to uninstall previous version?
german.CMWWPrevVerInstalled =Die vorherige Version von WardWiz ist bereits installiert. Wollen Sie die vorherige Version deinstallieren?

CMWWAnotherInstanceRunning =Another instance of WardWiz Setup is already running.
english.CMWWAnotherInstanceRunning =Another instance of WardWiz Setup is already running.
german.CMWWAnotherInstanceRunning =Eine andere Ausführung des WardWiz-Setups läuft bereits.

CMWWPackgNotSupported =Installation package is not supported for this OS.  Please download WardWiz 64-bit setup
english.CMWWPackgNotSupported =Installation package is not supported for this OS.  Please download WardWiz 64-bit setup
german.CMWWPackgNotSupported =Die Installation wird von diesem Betriebssystem nicht unterstützt. Bitte laden Sie die WardWiz 64-Bit Setup-Datei herunter.

CMWWRemoveAll =Are you sure you want to completely remove WardWiz and all of its components?
english.CMWWRemoveAll =Are you sure you want to completely remove WardWiz and all of its components?
german.CMWWRemoveAll =Sind Sie sicher, dass Sie WardWiz und alle damit verbundenen Komponenten vollständig entfernen möchten?

CMWWCloseAllForUninstall =Please close all running WardWiz application(s) and try again for uninstallation
english.CMWWCloseAllForUninstall =Please close all running WardWiz application(s) and try again for uninstallation
german.CMWWCloseAllForUninstall =Bitte schließen Sie alle laufenden WardWiz Anwendungen und versuchen Sie die Deinstallation erneut.

CMWWStringConstAddFailed =Failed to install setup. Please try again.
english.CMWWStringConstAddFailed =Failed to install setup. Please try again.
german.CMWWStringConstAddFailed =Setup-Installation fehlgeschlagen. Bitte versuchen Sie es erneut.

CMWWInstallStatusMSG =Installing WardWiz...
english.CMWWInstallStatusMSG =Installing WardWiz...
german.CMWWInstallStatusMSG =WardWiz wird installiert...

CM_0_WWSetupDllAppRunningUnInstall =Some of the applications of WardWiz are running. Do you want close in order to continue Uninstallation?
english.CM_0_WWSetupDllAppRunningUnInstall =Some of the applications of WardWiz are running. Do you want close in order to continue Uninstallation?
german.CM_0_WWSetupDllAppRunningUnInstall =Einige WardWiz-Anwendungen laufen gerade. Möchten Sie diese schließen, um die Deinstallation fortsetzen?

CM_1_WWSetupDllAppRunningReInstall =Some of the applications of WardWiz are running. Do you want close in order to continue Re-Installation?
english.CM_1_WWSetupDllAppRunningReInstall =Some of the applications of WardWiz are running. Do you want close in order to continue Re-Installation?
german.CM_1_WWSetupDllAppRunningReInstall =Einige WardWiz-Anwendungen laufen gerade. Möchten Sie diese schließen, um die Re-installation fortsetzen?

CM_2_WWSetupDllOutlookCloseInstall =Outlook application needs to be closed before installing WardWiz. Please close and click on retry button.
english.CM_2_WWSetupDllOutlookCloseInstall =Outlook application needs to be closed before installing WardWiz. Please close and click on retry button.
german.CM_2_WWSetupDllOutlookCloseInstall =Outlook-Anwendung muss vor der Installation von WardWiz geschlossen werden. Bitte schließen Sie die Anwendung und klicken Sie auf "Wiederholen".

CM_3_WWSetupDllOutlookCloseUnInstall =Outlook application needs to be closed before uninstalling WardWiz. Please close and click on retry button.
english.CM_3_WWSetupDllOutlookCloseUnInstall =Outlook application needs to be closed before uninstalling WardWiz. Please close and click on retry button.
german.CM_3_WWSetupDllOutlookCloseUnInstall =Outlook-Anwendung muss vor der Deinstallation WardWiz geschlossen werden. Bitte schließen Sie die Anwendung und klicken Sie auf "Wiederholen".

CM_4_WWSetupDllInstallPatches =WardWiz is running. Do you want to close WardWiz to install patches?
english.CM_4_WWSetupDllInstallPatches =WardWiz is running. Do you want to close WardWiz to install patches?
german.CM_4_WWSetupDllInstallPatches =WardWiz läuft. Möchten Sie WardWiz schließen, um Patches zu installieren ?

CM_5_WWSetupDllClose =WardWiz is running. Do you want to close?
english.CM_5_WWSetupDllClose =WardWiz is running. Do you want to close?
german.CM_5_WWSetupDllClose =WardWiz läuft. Möchten Sie schließen?

CM_6_WWSetupDllUnInstallContinue =Currently the %s version is installed on your machine. Please uninstall it to continue.
english.CM_6_WWSetupDllUnInstallContinue  =Currently the %s version is installed on your machine. Please uninstall it to continue.
german.CM_6_WWSetupDllUnInstallContinue  =Derzeit ist die %s Version auf Ihrem Rechner installiert. Bitte deinstallieren Sie diese, um fortfahren zu können.

CM_7_WWSetupDllLatestInstalled  =Latest version of WardWiz is already installed.
english.CM_7_WWSetupDllLatestInstalled  =Latest version of WardWiz is already installed.
german.CM_7_WWSetupDllLatestInstalled  =Neueste Version von WardWiz ist bereits installiert.

CM_8_WWSetupDllLatestInstalled  =Previously WardWiz is already installed. Do you want to reinstall?
english.CM_8_WWSetupDllLatestInstalled  =Previously WardWiz is already installed. Do you want to reinstall?
german.CM_8_WWSetupDllLatestInstalled  =Zuvor WardWiz ist bereits installiert. Möchten Sie neu zu installieren ?

CM_9_WWSetupDllCustomMsgBoxButtonYes  =Yes
english.CM_9_WWSetupDllCustomMsgBoxButtonYes =Yes
german.CM_9_WWSetupDllCustomMsgBoxButtonYes =Ja

CM_10_WWSetupDllCustomMsgBoxButtonYesToAll  =Yes to All
english.CM_10_WWSetupDllCustomMsgBoxButtonYesToAll =Yes to All
german.CM_10_WWSetupDllCustomMsgBoxButtonYesToAll =Ja zu allem

CM_11_WWSetupDllCustomMsgBoxButtonNo  =No
english.CM_11_WWSetupDllCustomMsgBoxButtonNo =No
german.CM_11_WWSetupDllCustomMsgBoxButtonNo =Nein

CM_12_WWSetupDllCustomMsgBoxButtonNoToAll  =No to All
english.CM_12_WWSetupDllCustomMsgBoxButtonNoToAll =No to All
german.CM_12_WWSetupDllCustomMsgBoxButtonNoToAll =Nein zu allem

CM_13_WWSetupDllCustomMsgBoxButtonCancel  =Cancel
english.CM_13_WWSetupDllCustomMsgBoxButtonCancel =Cancel
german.CM_13_WWSetupDllCustomMsgBoxButtonCancel =Abbrechen

[LangOptions]
DialogFontSize=8
WelcomeFontName=Verdana
WelcomeFontSize=12
TitleFontName=Arial
TitleFontSize=29
CopyrightFontName=Arial
CopyrightFontSize=8
RightToLeft=no

[Tasks]
;issue default desktop icon and quick launch icon should be enable  resolve by lalit kumawat 3-19-2015
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}
Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; OnlyBelowVersion: 0,6.1

[Files]
;Source: RequiredFiles\CPPRESTRIBUTABLES\{#REDESTRIBUTABLES}; Flags: dontcopy nocompression
Source: VCL Styles\VclStylesinno.dll; DestDir: {app}; Flags: dontcopy
Source: VCL Styles\TurquoiseGray.vsf; DestDir: {app}; Flags: dontcopy
Source: ..\Release\Win32\Binaries\WRDWIZSETUPDLL.DLL; DestDir: {app}; Flags: ignoreversion uninsrestartdelete overwritereadonly
Source: Logo\COMPANYLOGO.ICO; DestDir: {app}; Flags: ignoreversion overwritereadonly


[Icons]
;Issue:New Logo implementation, delete old logo and copy new logo. Resolved by : Nitin K Date:4th Jan 2016
Name: {group}\{#MyWardWizAppName}; Filename: {app}\{#MyAppExeName}; IconFilename: {app}\COMPANYLOGO.ICO
;Neha Gharge to add utilities and its sub menus.
Name: {group}\{#Utility}\{#MyUtility_1}; Filename: {app}\{#MyAppExeName1}; Flags: excludefromshowinnewinstall; IconFilename: {app}\COMPANYLOGO.ICO
Name: {group}\{#Utility}\{#MyUtility_2}; Filename: {app}\{#MyAppExeName2}; Flags: excludefromshowinnewinstall; IconFilename: {app}\COMPANYLOGO.ICO
Name: {group}\{#Utility}\{#MyUtility_3}; Filename: {app}\{#MyAppExeName3}; Flags: excludefromshowinnewinstall; IconFilename: {app}\COMPANYLOGO.ICO
;lalit 2-3-2015 silent mode uninstallation
Name: {group}\{cm:UninstallProgram,{#MyWardWizAppName}}; Filename: {app}\WRDWIZUNINST.exe; IconFilename: {app}\COMPANYLOGO.ICO
Name: {commondesktop}\{#MyWardWizAppName}; Filename: {app}\{#MyAppExeName}; Tasks: desktopicon; WorkingDir : {app}; IconFilename: {app}\COMPANYLOGO.ICO
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyWardWizAppName}; Filename: {app}\{#MyAppExeName}; Tasks: quicklaunchicon

[Run]
; lalit 5-9-2015, uninstallaion reg key need to update to run on silent mode uninstallation.
;neha Gharge nowait remove it will wait till proper installation is not done
;Issue: After launching Main UI Custom scan Drag drop not working properly, If we close UI and Start again from Desktop then It works Resolved by : Nitin K Date: 23rd April 2015
Filename: REG.exe; Parameters: "ADD ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{078ABE62-583D-43e6-96D6-5D092883DC82}_is1"" /V ""UninstallString"" /T ""REG_SZ"" /D ""\""{app}\WRDWIZUNINST.exe\"" /SILENT"" /F"; StatusMsg: {cm:CMWWInstallStatusMSG}; Flags: RunHidden WaitUntilTerminated
Filename: REG.exe; Parameters: "ADD ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{078ABE62-583D-43e6-96D6-5D092883DC82}_is1"" /V ""QuietUninstallString"" /T ""REG_SZ"" /D ""\""{app}\WRDWIZUNINST.exe\"" /SILENT"" /F"; StatusMsg: {cm:CMWWInstallStatusMSG}; Flags: RunHidden WaitUntilTerminated
Filename: REG.exe; Parameters: "ADD ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{078ABE62-583D-43e6-96D6-5D092883DC82}_is1"" /V ""DisplayName"" /T ""REG_SZ"" /D ""WardWiz"" /F"; StatusMsg: {cm:CMWWInstallStatusMSG}; Flags: RunHidden WaitUntilTerminated
Filename: REG.exe; Parameters: "ADD ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{078ABE62-583D-43e6-96D6-5D092883DC82}_is1"" /V ""DisplayVersion"" /T ""REG_SZ"" /D {#AppVer} /F"; StatusMsg: {cm:CMWWInstallStatusMSG}; Flags: RunHidden WaitUntilTerminated

[UninstallRun]
Filename: {app}\WRDWIZCLOSEALL.EXE; Flags: runminimized runhidden

[Registry]
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: AppFolder; ValueData: {app}\; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: AppVersion; ValueData: {code:GetAppVersion| AppVer}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: DataBaseVersion; ValueData: {code:GetDataBaseVersion| DataVer}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: DataEncVersion; ValueData: {code:GetDataEncVersion|DataEncVer}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: LastScandt; ValueData: {code:GetLastScandt|00/00/00 00:00:00}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: LastLiveupdatedt; ValueData: {code:Date} {code:Time}; Flags: uninsdeletekey createvalueifdoesntexist; Tasks: ; Languages: 
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: string; ValueName: LastLiveupdatetm; ValueData: {code:Time}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: ScanType; ValueData: {code:GetScanType| -1}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: VirusFound; ValueData: {code:GetVirusFound| 0}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwAutoDefUpdate; ValueData: {code:GetdwAutoDefUpdate| 1}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwAutoProductUpdate; ValueData: {code:GetdwAutoProductUpdate| 1}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwDeleteOldReports; ValueData: {code:GetdwDeleteOldReports| 1}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwEnableSound; ValueData: {code:GetdwEnableSound| 1}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwShowStartupTips; ValueData: {code:GetdwShowStartupTips| 1}; Flags: uninsdeletekey noerror dontcreatekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwShowTrayPopup; ValueData: {code:GetdwShowTrayPopup| 1}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwStartUpScan; ValueData: {code:GetdwStartUpScan| 0}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwUpdateReboot; ValueData: {code:GetdwUpdateReboot| 0}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwUsbScan; ValueData: {code:GetdwUsbScan| 1}; Flags: uninsdeletekey noerror dontcreatekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwDaysToDelRep; ValueData: {code:GetdwDaysToDelRep| 30}; Flags: uninsdeletekey noerror dontcreatekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwShowSecNews; ValueData: {code:GetdwShowSecNews| 1}; Flags: uninsdeletekey noerror dontcreatekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwDaysToDelRep; ValueData: {code:GetdwDaysToDelRep| 30}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwProductID; ValueData: {code:GetdwProductID| 1}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwLoggingLevel; ValueData: {code:GetdwLoggingLevel| 2}; Flags: uninsdeletekey createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwScanLevel; ValueData: {code:GetdwScanLevel| 1}; Flags: uninsdeletekey createvalueifdoesntexist
;Varada Ikhar, Date: 13th May-2015, New Implementation : 'Release Note' message pop-up should be displayed after successful product update.
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwRelNotesShow; ValueData: {code:GetdwRelNotesShow| 0}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKCR; Subkey: .WWIZ; ValueType: string; ValueName: ; ValueData: {#ResIconReg}; Flags: uninsdeletekey
Root: HKCR; Subkey: .*.WWIZ; ValueType: string; ValueName: ; ValueData: {#ResIconReg}; Flags: uninsdeletekey
Root: HKCR; Subkey: {#ResIconReg}\DefaultIcon; ValueType: string; ValueName: ; ValueData: {app}\{#ResFileName}; Flags: uninsdeletekey
Root: HKCR; Subkey: {#ResIconReg}\shell\open\command; ValueType: string; ValueName: ; ValueData: """{app}\{#MyAppExeName}""{#ExecuteExeRegEntryThirdParam}{#ExecuteExeRegEntrySecParam}"; Flags: uninsdeletekey
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwCrKeepOrg; ValueData: {code:GetdwCrKeepOrg| 0}; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwQuarantineOption; ValueData: 1; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwHeuScan; ValueData: 1; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwActiveScanOption; ValueData: 1; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwBackgroundCaching; ValueData: 1; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKLM; Subkey: SOFTWARE\Wardwiz; ValueType: dword; ValueName: dwCachingMethod; ValueData: 1; Flags: uninsdeletekey noerror createvalueifdoesntexist
Root: HKCU; Subkey: Control Panel\Desktop; ValueType: string; ValueName: AutoEndTasks; ValueData: 1; Flags: uninsdeletekey

[InstallDelete]
; lalit 2-7-2015 issue-doblicate icon in start menu
Type: files; Name: {group}\*.*

[UninstallDelete]
Type: files; Name: {app}\*.*
Type: filesandordirs; Name: {app}\Log
Type: files; Name: {app}
Type: files; Name: {app}\DRIVERS

[Code]

                                     // Funtions for String Data

   // Funtion for GetAppVersion
function GetAppVersion(Value_Name : string):string;
         var S_ver : string;
   begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'AppVersion', S_ver);

     if (S_ver = '') then
     begin
     Result := ExpandConstant('{#AppVer}');
     end
     else
      Result := S_ver;
   end;

// Funtion for GetDBVersion
function GetDataBaseVersion(Value_Name : string):string;
         var db : string;
   begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'DataBaseVersion', db);

     if(db = '')  then
     begin
      Result := ExpandConstant('{#DataVer}');
     end
      else
         Result := db;
   end;

// Funtion for GetDataEncVersion
function GetDataEncVersion(Value_Name : string):string;
         var encv : string;
   begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'DataEncVersion', encv);

     if(encv = '') then
     begin
      Result := ExpandConstant('{#DataEncVer}');
     end
      else
       Result := encv;
   end;

// Funtion for GetLastScandt
function GetLastScandt(Value_Name : string):string;
         var Ldate : string;
   begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'LastScandt', Ldate);
    if(Ldate = '') then
    begin
     Result :=  '00/00/00 00:00:00';
    end
       else
    Result := Ldate;
   end;

                                // Functions for DWORD Data

 // Function to GetdwShowSecNews
function GetdwShowSecNews(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwShowSecNews', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
      Result := temp_data;
 end;

 // Function to GetScanType
function GetScanType(Value_Name : string): string;
         var Value_Data : dword;
         var temp_data : string;
         var check : Boolean;
 begin
      check:= RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'ScanType', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := '-1';
      end
      else
       Result := IntToStr(Integer(Value_Data));

      if(Value_Data > 10) then
      begin
          Result := '-1';
      end;
 end;

// Function to GetVirusFound
function GetVirusFound(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;

 begin
     check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus','VirusFound', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(0);
      end
      else
        Result := temp_data;
 end;

// Function to Auto Defination Update
function GetdwAutoDefUpdate(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
 begin
     check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwAutoDefUpdate', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
       Result := temp_data;
 end;

// Function to GetdwAutoProductUpdate
function GetdwAutoProductUpdate(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
  begin
      check:= RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwAutoProductUpdate', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
       Result := temp_data;
 end;

// Function to GetdwDeleteOldReports
function GetdwDeleteOldReports(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwDeleteOldReports', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwEnableSound Data
function GetdwEnableSound(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwEnableSound', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwShowStartupTips
function GetdwShowStartupTips(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;

   begin
     check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwShowStartupTips', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
       Result := temp_data;
  end;

// Function to a Tray Popup
function GetdwShowTrayPopup(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;

 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwShowTrayPopup', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
       Result := temp_data;
 end;

// Function to  GetdwStartUpScan Data
function GetdwStartUpScan(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
         var check : Boolean;
     begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwStartUpScan', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(0);
      end
      else
       Result := temp_data;
 end;

// Function to GetdwUpdateReboot
function GetdwUpdateReboot(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;

 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwUpdateReboot', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(0);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwUsbScan
function GetdwUsbScan(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
     check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwUsbScan', Value_Data);
      temp_data := IntToStr(Value_Data);

     if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwDaysToDelRep
function GetdwDaysToDelRep(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwDaysToDelRep', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(30);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwProductID
function GetdwProductID(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwProductID', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
       Result := temp_data;
 end;

// Function to GetdwLoggingLevel
function GetdwLoggingLevel(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwLoggingLevel', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(2);
      end
      else
       Result := temp_data;
 end;

// Function to GetdwScanLevel
function GetdwScanLevel(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwScanLevel', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(1);
      end
      else
      Result := temp_data;
 end;

// Function to GetdwRelNotesShow
function GetdwRelNotesShow(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
     check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwRelNotesShow', Value_Data);
      temp_data := IntToStr(Value_Data);

      if(check  = false) then
      begin
       Result := IntToStr(0);
      end
      else
      Result := temp_data;
 end;

 // Function to GetdwCrKeepOrg
function GetdwCrKeepOrg(Value_Name : string): string;
         var Value_Data : Cardinal;
         var temp_data : string;
          var check : Boolean;
 begin
      check := RegQueryDWordValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'dwCrKeepOrg', Value_Data);
      temp_data := IntToStr(Value_Data);
      Result := temp_data;
 end;


    //Function to Copy a String Data as Default
function GetStringData(Value_Name : string):string;
         var str_Value_Data : string;
   begin
    if(Value_Name = 'Default') then
        Value_Name := '';

    RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', Value_Name, str_Value_Data);
    Result := str_Value_Data;
  end;

  // Procedure to Get MVersion
Procedure GetMVersion(RegKey: integer; SubkeyName: String);
 var M_Ver : string;
 begin
     if (RegValueExists(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'MVersion')) then
       begin
        RegQueryStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz Antivirus', 'MVersion', M_Ver);
		     if not(M_Ver = '') then
        RegWriteStringValue(HKEY_LOCAL_MACHINE ,'SOFTWARE\Wardwiz', 'MVersion',M_Ver);
      end;
 end;

  // Procedure to Remove old Registry
Procedure OldReg_Remover(RegKey: integer; SubkeyName: String);
    begin
    if RegKeyExists(RegKey, SubkeyName) then
   RegDeleteKeyIncludingSubkeys(RegKey ,SubkeyName);
  end;

const
  MF_BYCOMMAND = $00000000;
  MF_BYPOSITION = $00000400;

type
  HMENU = THandle;

// Import the LoadVCLStyle function from VclStylesInno.DLL
procedure LoadVCLStyle(VClStyleFile: String); external 'LoadVCLStyleW@files:VclStylesInno.dll stdcall';
// Import the UnLoadVCLStyles function from VclStylesInno.DLL
procedure UnLoadVCLStyles; external 'UnLoadVCLStyles@files:VclStylesInno.dll stdcall';

function DeleteMenu(hMenu: HMENU; uPosition, uFlags: UINT): BOOL;
external 'DeleteMenu@user32.dll stdcall';

function SendAllStringsuninstall(const StringName:String): Boolean;
external 'SendAllStrings@{app}\WRDWIZSETUPDLL.DLL cdecl uninstallonly';

function SetApplicationPath(const strAppPath:String): Boolean;
external 'SetApplicationPath@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function CloseAllApplicationForUninstall(const strAppPath:String): Boolean;
external 'CloseAllApplicationForUninstall@{app}\WRDWIZSETUPDLL.DLL cdecl uninstallonly';

function GetSystemMenu(hWnd: HWND; bRevert: BOOL): HMENU;
external 'GetSystemMenu@user32.dll stdcall';

function GetMenuItemCount(hMenu: HMENU): Integer;
external 'GetMenuItemCount@user32.dll stdcall';

function RestartNow(): Boolean;
external 'RestartNow@{app}\WRDWIZSETUPDLL.DLL cdecl uninstallonly';

function MoveFileEXtoRestartDlt(const strAppPath:String): Boolean;
external 'MoveFileEXtoRestartDlt@{app}\WRDWIZSETUPDLL.DLL cdecl uninstallonly';

function GetOSVersion(): integer;
external 'GetOSVersion@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function InstallDriverService(): integer;
external 'InstallDriverService@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function StartDriverServiceLocal(): integer;
external 'StartDriverServiceLocal@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function RegisterSetupWithDrivers(): integer;
external 'RegisterSetupWithDrivers@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function CreateMutexForTroubleshooter(): Boolean;
external 'CreateMutexForTroubleshooter@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function ResumeProtectionDrivers(): integer;
external 'ResumeProtectionDrivers@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function PauseProtectionDrivers(): integer;
external 'PauseProtectionDrivers@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

function StartProductServices(): integer;
external 'StartProductServices@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

//function StopServices(): Boolean;
//external 'StopServices@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

//function StartServices(): Boolean;
//external 'StartServices@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

//function CloseAllApplication(): Boolean;
//external 'CloseAllApplication@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

//procedure StartStartUpApplications(path:string);
//external 'StartStartUpApplications@files:WRDWIZSETUPDLL.DLL cdecl setuponly';

procedure ExitProcess(exitCode:integer);
external 'ExitProcess@kernel32.dll stdcall';


  //lalit 2-7-2015 if we installed 1.0.0.8 and apply latest patches then during uninstall none of message box comes
procedure RemovePrevUninstaller();
begin

       if FileExists(ExpandConstant('{app}\unins000.exe'))then
      DeleteFile(ExpandConstant('{app}\unins000.exe'));

      if FileExists(ExpandConstant('{app}\unins000.dat'))then
      DeleteFile(ExpandConstant('{app}\unins000.dat'));
      // lalit 2-7-2015 dublicate entry in start menu
      if FileExists(ExpandConstant('{commondesktop}\WardWiz Antivirus.lnk'))then
      DeleteFile(ExpandConstant('{commondesktop}\WardWiz Antivirus.lnk'));

      if FileExists(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz Antivirus.lnk'))then
        DeleteFile(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz Antivirus.lnk'));
		 //Issue:New Logo implementation, delete old logo and copy new logo. Resolved by : Nitin K Date:4th Jan 2016
	  if FileExists(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz.lnk'))then
         DeleteFile(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz.lnk'));

      if FileExists(ExpandConstant('{commondesktop}\WardWiz.lnk'))then
       DeleteFile(ExpandConstant('{commondesktop}\WardWiz.lnk'));
end;

procedure RemoveUnnecessaryDriversFile();
var
  ResultCode: Integer;
begin
     	ResultCode := GetOSVersion();

    if(ResultCode = 5 ) then
      begin
     if FileExists(ExpandConstant('{app}\DRIVERS\{#PPSECURE64}'))then
      DeleteFile(ExpandConstant('{app}\DRIVERS\{#PPSECURE64}'));
       end;

     if (ResultCode = 10 ) then
      begin
     if FileExists(ExpandConstant('{app}\DRIVERS\{#PPSECURE64}'))then
      DeleteFile(ExpandConstant('{app}\DRIVERS\{#PPSECURE64}'));

     if FileExists(ExpandConstant('{app}\DRIVERS\{#PPXPROC}'))then
      DeleteFile(ExpandConstant('{app}\DRIVERS\{#PPXPROC}'));
       end;

      if not ((ResultCode = 10) or (ResultCode = 5)) then
      begin
     if FileExists(ExpandConstant('{app}\DRIVERS\{#PPXPROC}'))then
      DeleteFile(ExpandConstant('{app}\DRIVERS\{#PPXPROC}'));
      end ;
end;

procedure UpdateUninstallRegKey();
begin

   RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1',
    'DisplayVersion', '{#AppVer}');

   RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1',
    'DisplayName', 'WardWiz');

   RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1',
    'QuietUninstallString', '"{app}\WRDWIZUNINST.exe" /SILENT');

   RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1',
    'UninstallString', '"{app}\WRDWIZUNINST.exe"');

end;

procedure ExtractDriverFileManually();
begin

//      ResultCode := GetOSVersion();

//     if(ResultCode = 5 ) then
//      begin
//       ExtractTemporaryFile('{#FPSCANNER}');
//        ExtractTemporaryFile('{#PPXPROC}');
//        RenameFile(ExpandConstant('{tmp}\{#FPSCANNER}'), ExpandConstant('{app}\DRIVERS\{#FPSCANNER}')) ;
//        RenameFile(ExpandConstant('{tmp}\{#PPXPROC}'), ExpandConstant('{app}\DRIVERS\{#PPXPROC}')) ;
//      end;

//     if (ResultCode = 10 ) then
//      begin
//       ExtractTemporaryFile('{#FPSCANNER}');
//        RenameFile(ExpandConstant('{tmp}\{#FPSCANNER}'), ExpandConstant('{app}\DRIVERS\{#FPSCANNER}')) ;
//      end;

//      if not ((ResultCode = 10) or (ResultCode = 5)) then
//      begin
//       ExtractTemporaryFile(ExpandConstant('{app}\DRIVERS\{#PPSECURE64}'));
//       ExtractTemporaryFile(ExpandConstant('{app}\DRIVERS\{#FPSCANNER}'));
//        RenameFile(ExpandConstant('{tmp}\{#FPSCANNER}'), ExpandConstant('{app}\DRIVERS\{#FPSCANNER}')) ;
//       RenameFile(ExpandConstant('{tmp}\{#PPSECURE64}'), ExpandConstant('{app}\DRIVERS\{#PPSECURE64}')) ;

//      end;


       InstallDriverService();
//       StartDriverServiceLocal();
//       RegisterSetupWithDrivers();
       PauseProtectionDrivers();



end;

function NextButtonClick(CurPage: Integer): Boolean;
begin
  Result := True;
  if (CurPage = 1) then
   begin
   end
   else if (CurPage = 2) then
   begin
  end
  //Issue - Wardwiz AV is getting installed at multiple location.
  //Resolved By Nitin K. Date: 02nd - Feb - 2015
  else if (CurPage = 06)then
  begin
  end
  else if (CurPage = 10)then
  begin
   //Result  := False;
    PauseProtectionDrivers();
   //CreateMutexForTroubleshooter();
   // ExtractDriverFileManually();
   // StopServices();
   // CloseAllApplication();
   //lalit 2-7-2015 if we installed 1.0.0.8 and apply latest patches then during uninstall none of message box comes
  RemovePrevUninstaller();
   if  Result = False then
   begin
     ExitProcess(0);
   end;
    //  CloseAllApplication();
  end
  else if(CurPage = 14) then
  begin
 end
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
case CurUninstallStep of
  usPostUninstall:
      begin
      if DirExists(ExpandConstant('{app}\Quarantine')) then begin
        if MsgBox( ExpandConstant('{cm:CMWWDeleteQuarantineFolder}') , mbConfirmation, MB_YESNO)= idYes then
          DelTree(ExpandConstant('{app}'), True, True, True);
          end
          else   DelTree(ExpandConstant('{app}'), True, True, True);
       end;
     usDone: // lalit 2-3-2015 in silent mode successful uninstallation messge
      begin
	  // resolved by lalit kumawat, issue- After uninstallaion successfull message not coming.
	   // lalit 5-9-2015  issue- after applying update control panel showing entry after product uninstalled
          if RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1') then
          begin
            RegDeleteKeyIncludingSubkeys(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{078ABE62-583D-43e6-96D6-5D092883DC82}_is1');
         end;
         if RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Wardwiz Antivirus') then
            begin
            RegDeleteKeyIncludingSubkeys(HKEY_LOCAL_MACHINE, 'SOFTWARE\Wardwiz Antivirus');
            end;

         if RegKeyExists(HKEY_CLASSES_ROOT,'WardWiz.PATH.1.10.RES')then
         begin
          RegDeleteKeyIncludingSubkeys(HKEY_CLASSES_ROOT,'WardWiz.PATH.1.10.RES');
         end;

        if RegKeyExists(HKEY_CLASSES_ROOT,'.WWIZ')then
         begin
          RegDeleteKeyIncludingSubkeys(HKEY_CLASSES_ROOT,'.WWIZ');
         end;

        if RegKeyExists(HKEY_CLASSES_ROOT,'.*.WWIZ')then
         begin
          RegDeleteKeyIncludingSubkeys(HKEY_CLASSES_ROOT,'.*.WWIZ');
         end;

             if FileExists(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz.lnk'))then
                begin
                DeleteFile(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz.lnk'));
                end;
              if FileExists(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz Antivirus.lnk'))then
              begin
                DeleteFile(ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\WardWiz Antivirus.lnk'));
                end;

       if not FileExists(ExpandConstant('{app}\WRDWIZSHELLEXT.DLL'))then
          begin
           MsgBox( ExpandConstant('{cm:CMWWRemoveSuccess}') , mbInformation, MB_OK)
          end
        else
         begin
            if( MsgBox( ExpandConstant('{cm:CMWWRestartReq}') , mbConfirmation, MB_YESNO) = IDYES ) then
              begin
               RenameFile(ExpandConstant('{tmp}\WRDWIZSETUPDLL.DLL'),ExpandConstant('{app}\WRDWIZSETUPDLL.DLL')) ;
               MoveFileEXtoRestartDlt(ExpandConstant('{app}\'));
              RestartNow();
              end;
         end
         end;

   end;
end;

function InitializeSetup: Boolean;
begin
	ExtractTemporaryFile('TurquoiseGray.vsf');
	LoadVCLStyle(ExpandConstant('{tmp}\TurquoiseGray.vsf'));
  	Result := True;
end;

procedure DeinitializeSetup();
begin
	UnLoadVCLStyles;
end;

function Date(param: string) : String;
begin
  result := GetDateTimeString('mm/dd/yyyy', '/', ':');
end;

function Time(param: string) : String;
begin
  result := GetDateTimeString('hh:nn:ss', '-', ':');
end;

procedure RemoveAppDataFiles();
var
 path: string;
begin
      path :=  GetEnv('ALLUSERSPROFILE')
       if FileExists(path+'\WardWiz Antivirus\WRDWIZUSERREG.DB')
       then
       begin
          RenameFile(path+'\WardWiz Antivirus\WRDWIZUSERREG.DB',path+'\WRDWIZUSERREG.DB') ;
          DelTree(path+'\WardWiz Antivirus\*', False, True, True);
           RenameFile(path+'\WRDWIZUSERREG.DB',path+'\WardWiz Antivirus\WRDWIZUSERREG.DB') ;
          end
        else
     DelTree(path+'\WardWiz Antivirus\*', False, True, True);
      RenameFile(ExpandConstant('{app}\WRDWIZSETUPDLL.DLL'),ExpandConstant('{tmp}\WRDWIZSETUPDLL.DLL'));
end;

//lalit 2-3-2015 custom uninstallaiton confirmation message box
function InitializeUninstall() : Boolean;
var
  ResultOfCloseAll: Boolean;
  bAddFailed:Boolean;
begin
 Result := false;
 ResultOfCloseAll := false;
 bAddFailed := false;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_0_WWSetupDllAppRunningUnInstall}')) then
          begin
                bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_1_WWSetupDllAppRunningReInstall}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_2_WWSetupDllOutlookCloseInstall}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_3_WWSetupDllOutlookCloseUnInstall}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_4_WWSetupDllInstallPatches}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_5_WWSetupDllClose}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_6_WWSetupDllUnInstallContinue}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_7_WWSetupDllLatestInstalled}')) then
          begin
                 bAddFailed := true;
          end;
      if not SendAllStringsuninstall(ExpandConstant('{cm:CM_8_WWSetupDllLatestInstalled}')) then
        begin
                bAddFailed := true;
          end;
	  if not SendAllStringsuninstall(ExpandConstant('{cm:CM_9_WWSetupDllCustomMsgBoxButtonYes}')) then
          begin
                bAddFailed := true;
          end;
       if not SendAllStringsuninstall(ExpandConstant('{cm:CM_10_WWSetupDllCustomMsgBoxButtonYesToAll}')) then
          begin
                bAddFailed := true;
          end;
       if not SendAllStringsuninstall(ExpandConstant('{cm:CM_11_WWSetupDllCustomMsgBoxButtonNo}')) then
          begin
                bAddFailed := true;
          end;
       if not SendAllStringsuninstall(ExpandConstant('{cm:CM_12_WWSetupDllCustomMsgBoxButtonNoToAll}')) then
          begin
                bAddFailed := true;
          end;
       if not SendAllStringsuninstall(ExpandConstant('{cm:CM_13_WWSetupDllCustomMsgBoxButtonCancel}')) then
          begin
                bAddFailed := true;
          end;
      if (bAddFailed = true) then
        begin
                MsgBox( ExpandConstant('{cm:CMWWStringConstAddFailed}') , mbInformation, MB_OK)
                ExitProcess(0);
        end;
 Result :=  UninstallSilent();
 if not Result then
    Result := false;

 if  Result then
    begin
      Result := false;
          if MsgBox( ExpandConstant('{cm:CMWWRemoveAll}') , mbConfirmation, MB_YESNO)= idYes then
          Result := true;
    end;

  if Result then
        begin
            ResultOfCloseAll := CloseAllApplicationForUninstall(ExpandConstant('{app}\'));
            if(ResultOfCloseAll = true)then
            begin
              RenameFile(ExpandConstant('{app}\WRDWIZSETUPDLL.DLL'),ExpandConstant('{tmp}\WRDWIZSETUPDLL.DLL')) ;
              RemoveAppDataFiles();
              // UnloadDLL(ExpandConstant('{app}\WRDWIZSETUPDLL.DLL'));

              if(FileExists(ExpandConstant('{app}\WRDWIZSHELLEXT_OLD.DLL')))then
              begin
                UnloadDLL(ExpandConstant('{app}\WRDWIZSHELLEXT_OLD.DLL'));

                if(FileExists(ExpandConstant('{app}\WRDWIZSHELLEXT.DLL')))then
                begin
                    DeleteFile(ExpandConstant('{app}\WRDWIZSHELLEXT.DLL'));
                    RenameFile(ExpandConstant('{app}\WRDWIZSHELLEXT_OLD.DLL'),ExpandConstant('{app}\WRDWIZSHELLEXT.DLL'));
                end
                else
                  RenameFile(ExpandConstant('{app}\WRDWIZSHELLEXT_OLD.DLL'),ExpandConstant('{app}\WRDWIZSHELLEXT.DLL'));
              end
              else
                  if(FileExists(ExpandConstant('{app}\WRDWIZSHELLEXT.DLL')))then
                  begin
                      UnloadDLL(ExpandConstant('{app}\WRDWIZSHELLEXT.DLL'));
                  end;
              end;
         end;
         if(ResultOfCloseAll = False) then
         begin
           Result := false
           MsgBox( ExpandConstant('{cm:CMWWCloseAllForUninstall}') , mbInformation, MB_OK)
         end;
end;


procedure AddSupportNo();
var
  dwIsOffline: Cardinal;
begin
      if  RegQueryDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Wardwiz','dwIsOffline', dwIsOffline)then
      begin
     if (dwIsOffline = 0)then
         begin
            RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\WardWiz',
            'SupportNo', '{#SupportNumberNC}');
           end

       else
        RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\WardWiz',
        'SupportNo', '{#SupportNumberClam}');
    end
    else
       RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\WardWiz',
        'SupportNo', '{#SupportNumberClam}');
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
    if CurStep = ssPostInstall then
    begin
      SetApplicationPath(ExpandConstant('{app}\'));
      AddSupportNo();
      CreateMutexForTroubleshooter();
      ExtractDriverFileManually();
      StartDriverServiceLocal();
      RegisterSetupWithDrivers();
      PauseProtectionDrivers();
      RemoveUnnecessaryDriversFile();
      //StartStartUpApplications(ExpandConstant('{app}'));
      //StartProductServices();
      UpdateUninstallRegKey();
      ResumeProtectionDrivers();
      Sleep(1000);
      //StartServices();
      //Sleep(1000);
      ExitProcess(0);
    end;
end;

procedure InitializeWizard;
var
  SystemMenu: HMENU;
begin

  WizardForm.DirEdit.Enabled := false
  WizardForm.BackButton.Left := WizardForm.BackButton.Left -10;
  WizardForm.DirBrowseButton.Height := WizardForm.DirBrowseButton.Height -5;
  WizardForm.DirBrowseButton.Top := WizardForm.DirBrowseButton.Top +3;


  SystemMenu := GetSystemMenu(WizardForm.Handle, False);
  DeleteMenu(SystemMenu, 9999, MF_BYCOMMAND);
  DeleteMenu(SystemMenu, GetMenuItemCount(SystemMenu)-1, MF_BYPOSITION);

end;
